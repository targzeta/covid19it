#!/bin/bash
#
# by Emanuele Tomasi <targzeta@gmail.com>

# Calcola la percentuale di 'partial' sul 'total'. Il risultato viene settato
# nella variabile il cui nome è dato dal terzo argomento della funzione.
#
# Nota: viene passato il nome della variabile da settare per evitare il command
# substition. Questo perché implicherebbe l'esecuzione della funzione in una
# subshell, che rallenterebbe di molto lo script, visto la quantità di volte
# che viene chiamata!
function _perc() {
  local partial=$1
  local total=$2
  local var_name=$3

  local perc=0
  (($total != 0)) && let perc=partial*100/total

  let $var_name=perc
}

function _calc_data() {
  old_tamponi=0
  old_dimessi=0
  old_deceduti=0
  while IFS=',' read data ricoverati terapia_intensiva ospedalizzati \
           isolamento positivi nuovi_positivi nuovi_casi dimessi deceduti \
           casi tamponi dummy
  do
    let nuovi_tamponi=tamponi-old_tamponi
    let nuovi_dimessi=dimessi-old_dimessi
    let nuovi_deceduti=deceduti-old_deceduti

    _perc nuovi_positivi nuovi_tamponi 'incremento_positivi'
    _perc nuovi_casi nuovi_tamponi 'incremento_casi'

    _perc ricoverati ospedalizzati 'perc_ricoverati'
    _perc terapia_intensiva ospedalizzati 'perc_terapia_intensiva'

    _perc ospedalizzati positivi 'perc_ospedalizzati'
    _perc isolamento positivi 'perc_isolamento'

    _perc positivi casi 'perc_positivi'
    _perc dimessi casi 'perc_dimessi'
    _perc deceduti casi 'perc_deceduti'

    echo "$data
          $nuovi_tamponi
          $nuovi_dimessi
          $nuovi_deceduti
          $nuovi_positivi
          $nuovi_casi
          $incremento_positivi
          $incremento_casi
          $casi
          $positivi
          $perc_positivi
          $dimessi
          $perc_dimessi
          $deceduti
          $perc_deceduti
          $ospedalizzati
          $perc_ospedalizzati
          $isolamento
          $perc_isolamento
          $ricoverati
          $perc_ricoverati
          $terapia_intensiva
          $perc_terapia_intensiva
         " | tr -d ' ' | paste -s -d ','
    old_tamponi=$tamponi
    old_dimessi=$dimessi
    old_deceduti=$deceduti
  done
}

# data,
# stato,
# ricoverati_con_sintomi,
# terapia_intensiva,
# totale_ospedalizzati,
# isolamento_domiciliare,
# totale_positivi,
# variazione_totale_positivi,
# nuovi_positivi,
# dimessi_guariti,
# deceduti,
# totale_casi,
# tamponi,
# note_it,
# note_en
function italia() {
  cut -d',' -f1,3- ${DATA_DIR}/${FILE_ITALIA} |\
    sed -n "$(($FROM_DAY+1)),\$p" |\
  _calc_data
}

# data,
# stato,
# codice_regione,
# denominazione_regione,
# lat,
# long,
# ricoverati_con_sintomi,
# terapia_intensiva,
# totale_ospedalizzati,
# isolamento_domiciliare,
# totale_positivi,
# variazione_totale_positivi,
# nuovi_positivi,
# dimessi_guariti,
# deceduti,
# totale_casi,
# tamponi,
# note_it,
# note_en
function regione() {
 local regione="$1"
 grep ",${regione}," ${DATA_DIR}/${FILE_REGIONI} |\
   sed -n "${FROM_DAY},\$p" |\
   cut -d',' -f1,7- |\
   _calc_data
}

function provincia() {
  local provincia="$1"
  grep ",${provincia}," ${DATA_DIR}/${FILE_PROVINCE} |\
    sed -n "${FROM_DAY},\$p" |\
    cut -d',' -f1,10 |\
    (
      old_casi=0
      while IFS=',' read data casi
      do
        let nuovi_casi=casi-old_casi
        echo "$data,$nuovi_casi,$casi"
        old_casi=$casi
      done
    )
}

function _main() {
  ZONE="$1"

  if [[ "$ZONE" == "Italia" ]]
  then
    gp_file=multiple.gp
    fun=italia
  elif grep -q ",${ZONE}," ${DATA_DIR}/${FILE_REGIONI}
  then
    gp_file=multiple.gp
    fun=regione
  elif grep -q ",${ZONE}," ${DATA_DIR}/${FILE_PROVINCE}
  then
    gp_file=single.gp
    fun=provincia
  else
    echo "Input non trovato: ${ZONE}"
    return
  fi

  DAT_FILE="${TMP_DIR}/${ZONE}.dat"
  ${fun} "${ZONE}" > "$DAT_FILE"

  gp_dir=templates
  outfile=${TMP_DIR}/current.gp
  cat ${gp_dir}/common.gp ${gp_dir}/${gp_file} |\
    sed "s|#ZONE#|${ZONE}|
         s|#FILE#|${DAT_FILE}|
        " > $outfile

  if [ $gp_file = 'multiple.gp' ]
  then
    sed_command=''
    IFS=',' read -a values < <(tail -n1 "$DAT_FILE" | cut -d',' -f9-)
    for i in ${!values[*]}
    do
      sed_command+="s|#${i}#|${values[$i]}|;"
    done
    sed -i "${sed_command}" $outfile
  fi

  gnuplot -font -misc-fixed-medium-r-*-*-*-100-*-*-*-*-iso10646-1 -p $outfile
}

DATA_DIR=data
FILE_ITALIA=dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv
FILE_REGIONI=dati-regioni/dpc-covid19-ita-regioni.csv
FILE_PROVINCE=dati-province/dpc-covid19-ita-province.csv

FROM_DAY=4
TMP_DIR=tmp

mkdir -p $TMP_DIR

if [ -z "$1" ]
then
  _main "Italia"
else
  for zone in "$@"
  do
    _main "$zone"
  done
fi
